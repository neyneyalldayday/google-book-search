{"ast":null,"code":"const db = require(\"../models\"); // Defining methods for the booksController\n\n\nmodule.exports = {\n  findAll: function (req, res) {\n    db.Book.find().sort({\n      date: -1\n    }).then(dbModel => res.json(dbModel)).catch(err => res.status(422).json(err));\n  },\n  findById: function (req, res) {\n    db.Book.findById(req.params.id).then(dbModel => res.json(dbModel)).catch(err => res.status(422).json(err));\n  },\n  create: function (req, res) {\n    db.Book.create(req.body).then(dbModel => res.json(dbModel)).catch(err => res.status(422).json(err));\n  },\n  update: function (req, res) {\n    db.Book.findOneAndUpdate({\n      _id: req.params.id\n    }, req.body).then(dbModel => res.json(dbModel)).catch(err => res.status(422).json(err));\n  },\n  remove: function (req, res) {\n    db.Book.findById({\n      _id: req.params.id\n    }).then(dbModel => dbModel.remove()).then(dbModel => res.json(dbModel)).catch(err => res.status(422).json(err));\n  }\n};","map":{"version":3,"sources":["C:/Users/drfra/Documents/google-book-search/controllers/booksController.js"],"names":["db","require","module","exports","findAll","req","res","Book","find","sort","date","then","dbModel","json","catch","err","status","findById","params","id","create","body","update","findOneAndUpdate","_id","remove"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,WAAD,CAAlB,C,CAEA;;;AACAC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,OAAO,EAAE,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC1BN,IAAAA,EAAE,CAACO,IAAH,CACGC,IADH,GAEGC,IAFH,CAEQ;AAAEC,MAAAA,IAAI,EAAE,CAAC;AAAT,KAFR,EAGGC,IAHH,CAGQC,OAAO,IAAIN,GAAG,CAACO,IAAJ,CAASD,OAAT,CAHnB,EAIGE,KAJH,CAISC,GAAG,IAAIT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBE,GAArB,CAJhB;AAKD,GAPc;AAQfE,EAAAA,QAAQ,EAAE,UAASZ,GAAT,EAAcC,GAAd,EAAmB;AAC3BN,IAAAA,EAAE,CAACO,IAAH,CACGU,QADH,CACYZ,GAAG,CAACa,MAAJ,CAAWC,EADvB,EAEGR,IAFH,CAEQC,OAAO,IAAIN,GAAG,CAACO,IAAJ,CAASD,OAAT,CAFnB,EAGGE,KAHH,CAGSC,GAAG,IAAIT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBE,GAArB,CAHhB;AAID,GAbc;AAcfK,EAAAA,MAAM,EAAE,UAASf,GAAT,EAAcC,GAAd,EAAmB;AACzBN,IAAAA,EAAE,CAACO,IAAH,CACGa,MADH,CACUf,GAAG,CAACgB,IADd,EAEGV,IAFH,CAEQC,OAAO,IAAIN,GAAG,CAACO,IAAJ,CAASD,OAAT,CAFnB,EAGGE,KAHH,CAGSC,GAAG,IAAIT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBE,GAArB,CAHhB;AAID,GAnBc;AAoBfO,EAAAA,MAAM,EAAE,UAASjB,GAAT,EAAcC,GAAd,EAAmB;AACzBN,IAAAA,EAAE,CAACO,IAAH,CACGgB,gBADH,CACoB;AAAEC,MAAAA,GAAG,EAAEnB,GAAG,CAACa,MAAJ,CAAWC;AAAlB,KADpB,EAC4Cd,GAAG,CAACgB,IADhD,EAEGV,IAFH,CAEQC,OAAO,IAAIN,GAAG,CAACO,IAAJ,CAASD,OAAT,CAFnB,EAGGE,KAHH,CAGSC,GAAG,IAAIT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBE,GAArB,CAHhB;AAID,GAzBc;AA0BfU,EAAAA,MAAM,EAAE,UAASpB,GAAT,EAAcC,GAAd,EAAmB;AACzBN,IAAAA,EAAE,CAACO,IAAH,CACGU,QADH,CACY;AAAEO,MAAAA,GAAG,EAAEnB,GAAG,CAACa,MAAJ,CAAWC;AAAlB,KADZ,EAEGR,IAFH,CAEQC,OAAO,IAAIA,OAAO,CAACa,MAAR,EAFnB,EAGGd,IAHH,CAGQC,OAAO,IAAIN,GAAG,CAACO,IAAJ,CAASD,OAAT,CAHnB,EAIGE,KAJH,CAISC,GAAG,IAAIT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBE,GAArB,CAJhB;AAKD;AAhCc,CAAjB","sourcesContent":["const db = require(\"../models\");\r\n\r\n// Defining methods for the booksController\r\nmodule.exports = {\r\n  findAll: function(req, res) {\r\n    db.Book\r\n      .find()\r\n      .sort({ date: -1 })\r\n      .then(dbModel => res.json(dbModel))\r\n      .catch(err => res.status(422).json(err));\r\n  },\r\n  findById: function(req, res) {\r\n    db.Book\r\n      .findById(req.params.id)\r\n      .then(dbModel => res.json(dbModel))\r\n      .catch(err => res.status(422).json(err));\r\n  },\r\n  create: function(req, res) {\r\n    db.Book\r\n      .create(req.body)\r\n      .then(dbModel => res.json(dbModel))\r\n      .catch(err => res.status(422).json(err));\r\n  },\r\n  update: function(req, res) {\r\n    db.Book\r\n      .findOneAndUpdate({ _id: req.params.id }, req.body)\r\n      .then(dbModel => res.json(dbModel))\r\n      .catch(err => res.status(422).json(err));\r\n  },\r\n  remove: function(req, res) {\r\n    db.Book\r\n      .findById({ _id: req.params.id })\r\n      .then(dbModel => dbModel.remove())\r\n      .then(dbModel => res.json(dbModel))\r\n      .catch(err => res.status(422).json(err));\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}